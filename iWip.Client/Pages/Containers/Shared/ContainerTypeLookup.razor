@*****************************************************************************

* Copyright (c) 2024 iRobot Corporation. All Rights Reserved.
*****************************************************************************@

@using System.Linq.Expressions;
@using iWip.Infrastructure.Models.Containers;
@using iWip.Infrastructure.Services.Containers;
@inject IStringLocalizer<Resource> L

<label>@L["container_type"]</label>
<MudAutocomplete Clearable
                 For="@For"
                 SearchFunc="@Search"
                 T="string"
                 Value="Item"
                 ValueChanged="@((e) => OnValueChanged.InvokeAsync(e))"
                 ResetValueOnEmptyText="true"
                 Immediate="true"
                 Variant="Variant.Outlined"
                 Margin="Margin.Dense">
</MudAutocomplete>

@code {

    [Parameter] public string Item { get; set; }
    [Parameter] public Expression<Func<string>>? For { get; set; }
    [Parameter] public bool IsDisabled { get; set; }
    [Parameter] public EventCallback<string> OnValueChanged { get; set; }

    [Inject] private IContainersService ContainersService { get; set; }

    private IEnumerable<ContainerType> ContainerTypes { get; set; }


    protected override async Task OnInitializedAsync()
    {
        await GetAllContainerTypesAsync();
    }

    private async Task GetAllContainerTypesAsync()
    {
        ContainerTypes = await ContainersService.GetAllContainerTypesAsync();
    }

    private async Task<IEnumerable<string>> Search(string value)
    {
        if (string.IsNullOrEmpty(value))
            return ContainerTypes.Select(x => x.Name);
        return ContainerTypes.Where(x => x.Name.Contains(value, StringComparison.InvariantCultureIgnoreCase)).Select(x => x.Name);
    }

}